openapi: 3.0.1
info:
  title: Libre Graph API
  description: Libre Graph is a free API for cloud collaboration inspired by the MS Graph API.
  version: v1.0.1
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://ocis.ocis-traefik.latest.owncloud.works/graph/v1.0
    description: ownCloud Infinite Scale Latest
  - url: https://localhost:9200/graph/v1.0
    description: ownCloud Infinite Scale Development Setup
paths:
  '/me':
    get:
      tags:
        - me.user
      summary: Get current user
      operationId: GetOwnUser
      parameters:
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - memberOf
              type: string
      responses:
        '200':
          description: Retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /me/changePassword:
    post:
      tags:
        - me.changepassword
      summary: Chanage your own password
      operationId: ChangeOwnPassword
      requestBody:
        description: Password change request
        content:
          application/json:
            schema:
              title: Password change
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /me/drives:
    get:
      tags:
        - me.drives
      summary: Get all drives where the current user is a regular member of
      operationId: ListMyDrives
      parameters:
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/drivesFilter'
      responses:
        '200':
          description: Retrieved spaces
          content:
            application/json:
              schema:
                title: Collection of drives
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/drive'
                    maxItems: 100
                  '@odata.nextLink':
                    type: string
          links:
            root:
              operationId: HomeGetRoot
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/drives':
    get:
      tags:
        - drives.GetDrives
      summary: Get all available drives
      operationId: ListAllDrives
      parameters:
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/drivesFilter'
      responses:
        '200':
          description: Retrieved spaces
          content:
            application/json:
              schema:
                title: Collection of drives
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/drive'
          links:
            root:
              operationId: GetRoot
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    post:
      tags:
        - drives
      summary: Create a new drive of a specific type
      operationId: CreateDrive
      requestBody:
        description: New space property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/drive'
            examples:
                multiple values:
                  value:
                    name: Mars
                    quota:
                      total: 1000000000
                    description: Team space mars project
                minimal:
                  value:
                    name: Venus
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/drive'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/drives/{drive-id}':
    get:
      tags:
        - drives
      summary: Get drive by id
      operationId: GetDrive
      parameters:
        - name: drive-id
          in: path
          description: 'key: id of drive'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: drive
      responses:
        '200':
          description: Retrieved drive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/drive'
          links:
            root:
              operationId: GetRoot
              parameters:
                drive-id: $request.path.drive-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - drives
      summary: Update the drive
      operationId: UpdateDrive
      parameters:
        - name: drive-id
          in: path
          description: 'key: id of drive'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: drive
      requestBody:
        description: New space values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/drive'
            examples:
                change quota:
                  value:
                    quota:
                      total: 1000000000
                change name:
                  value:
                    name: Physics
                change description:
                  value:
                    description: Marketing team collaboration area
                change drive image:
                  value:
                    special:
                      id: 408f26e3-d6d8-4aa4-bd5c-3fd6f5032b51$aba2bafc-e1a0-421e-a37a-9acf5f655f83!14fd3432-e8d9-42a7-9446-2e3fd621afca
                      specialFolder:
                        name: image
                change drive readme:
                  value:
                    special:
                      id: 408f26e3-d6d8-4aa4-bd5c-3fd6f5032b51$aba2bafc-e1a0-421e-a37a-9acf5f655f83!14fd3432-e8d9-42a7-9446-2e3fd621afca
                      specialFolder:
                        name: readme
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/drive'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - drives
      summary: Delete a specific space
      operationId: DeleteDrive
      parameters:
        - name: drive-id
          in: path
          description: 'key: id of drive'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: drive
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/drives/{drive-id}/root':
    get:
      tags:
        - drives.root
      summary: Get root from arbitrary space
      operationId: GetRoot
      parameters:
        - name: drive-id
          in: path
          description: 'key: id of drive'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: drive
      responses:
        '200':
          description: Retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/driveItem'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /groups:
    get:
      tags:
        - groups
      summary: Get entities from groups
      operationId: ListGroups
      parameters:
        - $ref: '#/components/parameters/search'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - displayName
                - displayName desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - description
                - displayName
                - mail
                - members
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - members
              type: string
      responses:
        '200':
          description: Retrieved entities
          content:
            application/json:
              schema:
                title: Collection of group
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/group'
                  '@odata.nextLink':
                    type: string
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - groups
      summary: Add new entity to groups
      operationId: CreateGroup
      requestBody:
        description: New entity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
        required: true
      responses:
        '201':
          description: Created entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/group'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}':
    get:
      tags:
        - group
      summary: Get entity from groups by key
      operationId: GetGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id or name of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - description
                - displayName
                - members
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - members
              type: string
      responses:
        '200':
          description: Retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/group'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - group
      summary: Update entity in groups
      operationId: UpdateGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: New property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - group
      summary: Delete entity from groups
      operationId: DeleteGroup
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/members':
    get:
      tags:
        - group
      summary: Get a list of the group's direct members
      operationId: ListMembers
      parameters:
        - name: group-id
          in: path
          description: 'key: id or name of group'
          required: true
          schema:
            type: string
            example: 86948e45-96a6-43df-b83d-46e92afd30de
      responses:
        '200':
          description: Retrieved group members
          content:
            application/json:
              schema:
                title: Collection of users
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/user'
              example:
                - id: 90eedea1-dea1-90ee-a1de-ee90a1deee90
                  onPremisesSAMAccountName: max.mustermann
                  displayName: Max Mustermann
                  mail: max.musterman@example.org
        default:
          $ref: '#/components/responses/error'
  '/groups/{group-id}/members/$ref':
    post:
      tags:
        - group
      summary: Add a member to a group
      operationId: AddMember
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
      requestBody:
        description: Object to be added as member
        content:
          application/json:
            schema:
              title: Member Reference
              type: object
              properties:
                '@odata.id':
                  type: string
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/groups/{group-id}/members/{directory-object-id}/$ref':
    delete:
      tags:
        - group
      summary: Delete member from a group
      operationId: DeleteMember
      parameters:
        - name: group-id
          in: path
          description: 'key: id of group'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: group
        - name: directory-object-id
          in: path
          description: 'key: id of group member to remove'
          required: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /me/drive:
    get:
      tags:
        - me.drive
      summary: Get personal space for user
      operationId: GetHome
      responses:
        '200':
          description: Retrieved personal space
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/drive'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /me/drive/root:
    get:
      tags:
        - me.drive.root
      summary: Get root from personal space
      operationId: HomeGetRoot
      responses:
        '200':
          description: Retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/driveItem'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /me/drive/root/children:
    get:
      tags:
        - me.drive.root.children
      summary: Get children from drive
      operationId: HomeGetChildren
      responses:
        '200':
          description: Retrieved resource list
          content:
            application/json:
              schema:
                title: Collection of driveItems
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/driveItem'
                    maxItems: 100
                  '@odata.nextLink':
                    type: string
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /users:
    get:
      tags:
        - users
      summary: Get entities from users
      operationId: ListUsers
      parameters:
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/usersFilter'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - displayName
                - displayName desc
                - mail
                - mail desc
                - onPremisesSamAccountName
                - onPremisesSamAccountName desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - displayName
                - mail
                - memberOf
                - onPremisesSamAccountName
                - surname
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - drive
                - drives
                - memberOf
                - appRoleAssignments
              type: string
      responses:
        '200':
          description: Retrieved entities
          content:
            application/json:
              schema:
                title: Collection of user
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/user'
                  '@odata.nextLink':
                    type: string
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
    post:
      tags:
        - users
      summary: Add new entity to users
      operationId: CreateUser
      requestBody:
        description: New entity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      responses:
        '201':
          description: Created entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/users/{user-id}':
    get:
      tags:
        - user
      summary: Get entity from users by key
      operationId: GetUser
      parameters:
        - name: user-id
          in: path
          description: 'key: id or name of user'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: user
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - displayName
                - drive
                - drives
                - mail
                - memberOf
                - onPremisesSamAccountName
                - surname
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - drive
                - drives
                - memberOf
                - appRoleAssignments
              type: string
      responses:
        '200':
          description: Retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - user
      summary: Update entity in users
      operationId: UpdateUser
      parameters:
        - name: user-id
          in: path
          description: 'key: id of user'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: user
      requestBody:
        description: New property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - user
      summary: Delete entity from users
      operationId: DeleteUser
      parameters:
        - name: user-id
          in: path
          description: 'key: id or name of user'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: user
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/users/{user-id}/exportPersonalData':
    post:
      tags:
        - user
      summary: export personal data of a user
      operationId: ExportPersonalData
      parameters:
        - name: user-id
          in: path
          description: 'key: id or name of user'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: user
      requestBody:
        description: destination the file should be created at
        content:
          application/json:
            schema:
              properties:
                storageLocation:
                  type: string
                  description: the path where the file should be created in the users personal space
      responses:
        200:
          description: success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/users/{user-id}/appRoleAssignments':
    description: Provides operations to manage assignments of roles to users.
    get:
      tags:
        - user.appRoleAssignment
      summary: Get appRoleAssignments from a user
      description: Represents the global roles a user has been granted for an application.
      operationId: user.ListAppRoleAssignments
      responses:
        200:
          description: Retrieved appRoleAssignments
          content:
            application/json:
              schema:
                title: Collection of appRoleAssignments
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/appRoleAssignment'
                    maxItems: 100
                  '@odata.nextLink':
                    type: string
        default:
          $ref: '#/components/responses/error'
    post:
      tags:
        - user.appRoleAssignment
      summary: Grant an appRoleAssignment to a user
      description: |
        Use this API to assign a global role to a user. To grant an app role assignment to a user, you need three identifiers:
        * `principalId`: The `id` of the user to whom you are assigning the app role.
        * `resourceId`: The `id` of the resource `servicePrincipal` or `application` that has defined the app role.
        * `appRoleId`: The `id` of the `appRole` (defined on the resource service principal or application) to assign to the user.
      operationId: user.CreateAppRoleAssignments
      requestBody:
        description: New app role assignment value
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appRoleAssignment'
        required: true
      responses:
        200:
          description: Created new app role assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appRoleAssignment'
        default:
          $ref: '#/components/responses/error'
    parameters:
      - name: user-id
        in: path
        description: 'key: id of user'
        required: true
        style: simple
        schema:
          type: string
  '/users/{user-id}/appRoleAssignments/{appRoleAssignment-id}':
    description: Provides operations to manage a global role for an assigned user.
    delete:
      tags:
        - user.appRoleAssignment
      summary: Delete the appRoleAssignment from a user
      operationId: user.DeleteAppRoleAssignments
      parameters:
        - name: If-Match
          in: header
          description: ETag
          style: simple
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
    parameters:
      - name: user-id
        in: path
        description: 'key: id of user'
        required: true
        style: simple
        schema:
          type: string
      - name: appRoleAssignment-id
        in: path
        description: 'key: id of appRoleAssignment. This is the concatenated {user-id}:{appRole-id} separated by a colon.'
        required: true
        style: simple
        schema:
          type: string
  /education/users:
    get:
      tags:
        - educationUser
      summary: Get entities from education users
      security:
        - bearerAuth: []
      operationId: ListEducationUsers
      parameters:
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - displayName
                - displayName desc
                - mail
                - mail desc
                - onPremisesSamAccountName
                - onPremisesSamAccountName desc
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - memberOf
              type: string
      responses:
        '200':
          description: Retrieved entities
          content:
            application/json:
              schema:
                title: Collection of educationUser
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/educationUser'
              example:
                - id: 90eedea1-dea1-90ee-a1de-ee90a1deee90
                  onPremisesSAMAccountName: max.mustermann
                  displayName: Max Mustermann
                  mail: max.musterman@example.org
                  primaryRole: student
                  identities:
                    - issuer: idp.school.com
                      issuerAssignedId: max.mustermann
                    - issuer: newidp.school.com
                      issuerAssignedId: ieZ2AeV5
        default:
          $ref: '#/components/responses/error'
    post:
      tags:
        - educationUser
      summary: Add new education user
      security:
        - bearerAuth: []
      operationId: CreateEducationUser
      requestBody:
        description: New entity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/educationUser'
            examples:
              student:
                $ref: '#/components/examples/educationUser_post'
        required: true
      responses:
        '201':
          description: Created entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/educationUser'
              examples:
                student:
                  $ref: '#/components/examples/educationUser'
        default:
          $ref: '#/components/responses/error'
  '/education/users/{user-id}':
    get:
      tags:
        - educationUser
      summary: Get properties of educationUser
      security:
        - bearerAuth: []
      operationId: GetEducationUser
      parameters:
        - name: user-id
          in: path
          description: 'key: id or username of user'
          required: true
          schema:
            type: string
          examples:
            id:
              value: 90eedea1-dea1-90ee-a1de-ee90a1deee90
            name:
              value: max.mustermann
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - memberOf
              type: string
      responses:
        '200':
          description: Retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/educationUser'
              examples:
                student:
                  $ref: '#/components/examples/educationUser'
        default:
          $ref: '#/components/responses/error'
    patch:
      tags:
        - educationUser
      summary: Update properties of educationUser
      security:
        - bearerAuth: []
      operationId: UpdateEducationUser
      parameters:
        - name: user-id
          in: path
          description: 'key: id or username of user'
          required: true
          schema:
            type: string
            example: 90eedea1-dea1-90ee-a1de-ee90a1deee90
      requestBody:
        description: New property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/educationUser'
            example:
              mail: max.mustermann@new.domain
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/educationUser'
              example:
                id: 90eedea1-dea1-90ee-a1de-ee90a1deee90
                onPremisesSAMAccountName: max.mustermann
                displayName: Max Mustermann
                surname: Mustermann
                givenName: Max
                mail: max.musterman@new.domain
                primaryRole: student
                identities:
                  - issuer: idp.school.com
                    issuerAssignedId: max.mustermann
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
    delete:
      tags:
        - educationUser
      summary: Delete educationUser
      security:
        - bearerAuth: []
      operationId: DeleteEducationUser
      parameters:
        - name: user-id
          in: path
          description: 'key: id or username of user'
          required: true
          schema:
            type: string
            example: 90eedea1-dea1-90ee-a1de-ee90a1deee90
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
  /education/schools:
    get:
      tags:
        - educationSchool
      summary: Get a list of schools and their properties
      security:
        - bearerAuth: []
      operationId: ListSchools
      responses:
        '200':
          description: Retrieved entities
          content:
            application/json:
              schema:
                title: Collection of schools
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/educationSchool'
              example:
                - id: 0e19303e-8144-44bd-86d8-35cc8ac9c255
                  displayName: Gymnasium Musterstadt
                  schoolNumber: '0123'
                - id: 43b879c4-14c6-4e0a-9b3f-b1b33c5a4bd4
                  displayName: Realschule Musterstadt
                  schoolNumber: '1234'
        default:
          $ref: '#/components/responses/error'
    post:
      tags:
        - educationSchool
      summary: Add new school
      security:
        - bearerAuth: []
      operationId: CreateSchool
      requestBody:
        description: New school
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/educationSchool'
            examples:
              school:
                $ref: '#/components/examples/educationSchool_post'
        required: true
      responses:
        '201':
          description: Created entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/educationSchool'
              examples:
                school:
                  $ref: '#/components/examples/educationSchool'
        default:
          $ref: '#/components/responses/error'
  '/education/schools/{school-id}':
    get:
      tags:
        - educationSchool
      summary: Get the properties of a specific school
      security:
        - bearerAuth: []
      operationId: GetSchool
      parameters:
        - name: school-id
          in: path
          description: 'key: id or schoolNumber of school'
          required: true
          schema:
            type: string
            example: 43b879c4-14c6-4e0a-9b3f-b1b33c5a4bd4
      responses:
        '200':
          description: Retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/educationSchool'
              examples:
                school:
                  $ref: '#/components/examples/educationSchool'
        default:
          $ref: '#/components/responses/error'
    patch:
      tags:
        - educationSchool
      summary: Update properties of a school
      security:
        - bearerAuth: []
      operationId: UpdateSchool
      parameters:
        - name: school-id
          in: path
          description: 'key: id or schoolNumber of school'
          required: true
          schema:
            type: string
            example: 43b879c4-14c6-4e0a-9b3f-b1b33c5a4bd4
      requestBody:
        description: New property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/educationSchool'
            example:
              schoolNumber: '1234'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/educationSchool'
              examples:
                school:
                  $ref: '#/components/examples/educationSchool'
        default:
          $ref: '#/components/responses/error'
    delete:
      tags:
        - educationSchool
      summary: Delete school
      security:
        - bearerAuth: []
      operationId: DeleteSchool
      parameters:
        - name: school-id
          in: path
          description: 'key: id or schoolNumber of school'
          required: true
          schema:
            type: string
            example: 43b879c4-14c6-4e0a-9b3f-b1b33c5a4bd4
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
  '/education/schools/{school-id}/users':
    get:
      tags:
        - educationSchool
      summary: Get the educationUser resources associated with an educationSchool
      security:
        - bearerAuth: []
      operationId: ListSchoolUsers
      parameters:
        - name: school-id
          in: path
          description: 'key: id or schoolNumber of school'
          required: true
          schema:
            type: string
            example: 43b879c4-14c6-4e0a-9b3f-b1b33c5a4bd4
      responses:
        '200':
          description: Retrieved educationUser
          content:
            application/json:
              schema:
                title: Collection of educationUser
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/educationClass'
              example:
                - id: 90eedea1-dea1-90ee-a1de-ee90a1deee90
                  onPremisesSAMAccountName: max.mustermann
                  displayName: Max Mustermann
                  surname: Mustermann
                  givenName: Max
                  mail: max.musterman@example.org
                  primariyRole: student
                  identities:
                    - issuer: idp.school.com
                      issuerAssignedId: max.mustermann
        default:
          $ref: '#/components/responses/error'
  '/education/schools/{school-id}/users/$ref':
    post:
      tags:
        - educationSchool
      summary: Assign a user to a school
      security:
        - bearerAuth: []
      operationId: AddUserToSchool
      parameters:
        - name: school-id
          in: path
          description: 'key: id or schoolNumber of school'
          required: true
          schema:
            type: string
            example: 43b879c4-14c6-4e0a-9b3f-b1b33c5a4bd4
      requestBody:
        description: educationUser to be added as member
        content:
          application/json:
            schema:
              title: EducationUser Reference
              type: object
              properties:
                '@odata.id':
                  type: string
                  example: "https://<hostname>/graph/v1.0/education/users/90eedea1-dea1-90ee-a1de-ee90a1deee90"
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
  '/education/schools/{school-id}/users/{user-id}/$ref':
    delete:
      tags:
        - educationSchool
      summary: Unassign user from a school
      security:
        - bearerAuth: []
      operationId: DeleteUserFromSchool
      parameters:
        - name: school-id
          in: path
          description: 'key: id or schoolNumber of school'
          required: true
          schema:
            type: string
            example: 43b879c4-14c6-4e0a-9b3f-b1b33c5a4bd4
        - name: user-id
          in: path
          description: 'key: id or username of the user to unassign from school'
          required: true
          schema:
            type: string
            example: 90eedea1-dea1-90ee-a1de-ee90a1deee90
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
  '/education/schools/{school-id}/classes':
    get:
      tags:
        - educationSchool
      summary: Get the educationClass resources owned by an educationSchool
      security:
        - bearerAuth: []
      operationId: ListSchoolClasses
      parameters:
        - name: school-id
          in: path
          description: 'key: id or schoolNumber of school'
          required: true
          schema:
            type: string
            example: 43b879c4-14c6-4e0a-9b3f-b1b33c5a4bd4
      responses:
        '200':
          description: Retrieved classes
          content:
            application/json:
              schema:
                title: Collection of educationClass
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/educationClass'
              example:
                - id: 86948e45-96a6-43df-b83d-46e92afd30de
                  displayName: Mathematik
                  classification: course
                  externalId: ac528aea-978e-415c-a733-c4ba235d3388
                - id: 9097631c-24b6-4621-9635-36195a9c8d79
                  displayName: 10b
                  classification: class
                  externalId: 0123_10b
        default:
          $ref: '#/components/responses/error'
  '/education/schools/{school-id}/classes/$ref':
    post:
      tags:
        - educationSchool
      summary: Assign a class to a school
      security:
        - bearerAuth: []
      operationId: AddClassToSchool
      parameters:
        - name: school-id
          in: path
          description: 'key: id or schoolNumber of school'
          required: true
          schema:
            type: string
            example: 43b879c4-14c6-4e0a-9b3f-b1b33c5a4bd4
      requestBody:
        description: educationClass to be added as member
        content:
          application/json:
            schema:
              title: Class Reference
              type: object
              properties:
                '@odata.id':
                  type: string
                  example: "https://<hostname>/graph/v1.0/education/classes/7e84a069-f374-479b-817d-71590117d443"
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
  '/education/schools/{school-id}/classes/{class-id}/$ref':
    delete:
      tags:
        - educationSchool
      summary: Unassign class from a school
      security:
        - bearerAuth: []
      operationId: DeleteClassFromSchool
      parameters:
        - name: school-id
          in: path
          description: 'key: id or schoolNumber of school'
          required: true
          schema:
            type: string
            example: 43b879c4-14c6-4e0a-9b3f-b1b33c5a4bd4
        - name: class-id
          in: path
          description: 'key: id or externalId of the class to unassign from school'
          required: true
          schema:
            type: string
            example: 7e84a069-f374-479b-817d-71590117d443
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
  /education/classes:
    get:
      tags:
        - educationClass
      summary: list education classes
      operationId: ListClasses
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Retrieved entities
          content:
            application/json:
              schema:
                title: Collection of class
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/educationClass'
              example:
                - id: 86948e45-96a6-43df-b83d-46e92afd30de
                  displayName: Mathematik
                  classification: course
                  externalId: ac528aea-978e-415c-a733-c4ba235d3388
                - id: 9097631c-24b6-4621-9635-36195a9c8d79
                  displayName: 10b
                  classification: class
                  externalId: 0123_10b
        default:
          $ref: '#/components/responses/error'
    post:
      tags:
        - educationClass
      summary: Add new education class
      security:
        - bearerAuth: []
      operationId: CreateClass
      requestBody:
        description: New entity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/educationClass'
            examples:
              class:
                $ref: '#/components/examples/educationClass_post'
        required: true
      responses:
        '201':
          description: Created entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/educationClass'
              examples:
                class:
                  $ref: '#/components/examples/educationClass'
        default:
          $ref: '#/components/responses/error'
  '/education/classes/{class-id}':
    get:
      tags:
        - educationClass
      summary: Get class by key
      security:
        - bearerAuth: []
      operationId: GetClass
      parameters:
        - name: class-id
          in: path
          description: 'key: id or externalId of class'
          required: true
          schema:
            type: string
            example: 86948e45-96a6-43df-b83d-46e92afd30de
      responses:
        '200':
          description: Retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/educationClass'
              examples:
                class:
                  $ref: '#/components/examples/educationClass'
        default:
          $ref: '#/components/responses/error'
    patch:
      tags:
        - educationClass
      summary: Update properties of a education class
      security:
        - bearerAuth: []
      operationId: UpdateClass
      parameters:
        - name: class-id
          in: path
          description: 'key: id or externalId of class'
          required: true
          schema:
            type: string
            example: 86948e45-96a6-43df-b83d-46e92afd30de
      requestBody:
        description: New property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/educationClass'
            example:
              displayName: Musik
              externalId: cb766da3-bab1-478a-9615-f99d4c59c09a
        required: true
      responses:
        '200':
          description: New property values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/educationClass'
              example:
                id: 86948e45-96a6-43df-b83d-46e92afd30de
                displayName: Musik
                classification: course
                externalId: cb766da3-bab1-478a-9615-f99d4c59c09a
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
    delete:
      tags:
        - educationClass
      summary: Delete education class
      security:
        - bearerAuth: []
      operationId: DeleteClass
      parameters:
        - name: class-id
          in: path
          description: 'key: id or externalId of class'
          required: true
          schema:
            type: string
            example: 86948e45-96a6-43df-b83d-46e92afd30de
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
  '/education/classes/{class-id}/members':
    get:
      tags:
        - educationClass
      summary: Get the educationClass resources owned by an educationSchool
      security:
        - bearerAuth: []
      operationId: ListClassMembers
      parameters:
        - name: class-id
          in: path
          description: 'key: id or externalId of class'
          required: true
          schema:
            type: string
            example: 86948e45-96a6-43df-b83d-46e92afd30de
      responses:
        '200':
          description: Retrieved class members
          content:
            application/json:
              schema:
                title: Collection of educationUser
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/educationUser'
              example:
                - id: 90eedea1-dea1-90ee-a1de-ee90a1deee90
                  onPremisesSAMAccountName: max.mustermann
                  displayName: Max Mustermann
                  surname: Mustermann
                  givenName: Max
                  mail: max.musterman@example.org
                  primariyRole: student
                  identities:
                    - issuer: idp.school.com
                      issuerAssignedId: max.mustermann
        default:
          $ref: '#/components/responses/error'
  '/education/classes/{class-id}/members/$ref':
    post:
      tags:
        - educationClass
      summary: Assign a user to a class
      security:
        - bearerAuth: []
      operationId: AddUserToClass
      parameters:
        - name: class-id
          in: path
          description: 'key: id or externalId of class'
          required: true
          schema:
            type: string
            example: 86948e45-96a6-43df-b83d-46e92afd30de
      requestBody:
        description: educationUser to be added as member
        content:
          application/json:
            schema:
              title: Class Member Reference
              type: object
              properties:
                '@odata.id':
                  type: string
                  example: "https://<hostname>/graph/v1.0/education/users/90eedea1-dea1-90ee-a1de-ee90a1deee90"
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
  '/education/classes/{class-id}/members/{user-id}/$ref':
    delete:
      tags:
        - educationClass
      summary: Unassign user from a class
      security:
        - bearerAuth: []
      operationId: DeleteUserFromClass
      parameters:
        - name: class-id
          in: path
          description: 'key: id or externalId of class'
          required: true
          schema:
            type: string
        - name: user-id
          in: path
          description: 'key: id or username of the user to unassign from class'
          required: true
          schema:
            type: string
            example: 90eedea1-dea1-90ee-a1de-ee90a1deee90
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
  '/education/classes/{class-id}/teachers':
    get:
      tags:
        - educationClass.teachers
      summary: Get the teachers for a class
      security:
        - bearerAuth: []
      operationId: GetTeachers
      parameters:
        - name: class-id
          in: path
          description: 'key: id or externalId of class'
          required: true
          schema:
            type: string
            example: 86948e45-96a6-43df-b83d-46e92afd30de
      responses:
        '200':
          description: Retrieved class teachers
          content:
            application/json:
              schema:
                title: Collection of educationUser
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/educationUser'
              example:
                - id: 90eedea1-dea1-90ee-a1de-ee90a1deee90
                  onPremisesSAMAccountName: max.mustermann
                  displayName: Max Mustermann
                  surname: Mustermann
                  givenName: Max
                  mail: max.musterman@example.org
                  primariyRole: teacher
                  identities:
                    - issuer: idp.school.com
                      issuerAssignedId: max.mustermann
        default:
          $ref: '#/components/responses/error'
  '/education/classes/{class-id}/teachers/$ref':
    post:
      tags:
        - educationClass.teachers
      summary: Assign a teacher to a class
      security:
        - bearerAuth: []
      operationId: AddTeacherToClass
      parameters:
        - name: class-id
          in: path
          description: 'key: id or externalId of class'
          required: true
          schema:
            type: string
            example: 86948e45-96a6-43df-b83d-46e92afd30de
      requestBody:
        description: educationUser to be added as teacher
        content:
          application/json:
            schema:
              title: Class Teacher Reference
              type: object
              properties:
                '@odata.id':
                  type: string
                  example: "https://<hostname>/graph/v1.0/education/users/90eedea1-dea1-90ee-a1de-ee90a1deee90"
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
  '/education/classes/{class-id}/teachers/{user-id}/$ref':
    delete:
      tags:
        - educationClass.teachers
      summary: Unassign user as teacher of a class
      security:
        - bearerAuth: []
      operationId: DeleteTeacherFromClass
      parameters:
        - name: class-id
          in: path
          description: 'key: id or externalId of class'
          required: true
          schema:
            type: string
        - name: user-id
          in: path
          description: 'key: id or username of the user to unassign as teacher'
          required: true
          schema:
            type: string
            example: 90eedea1-dea1-90ee-a1de-ee90a1deee90
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
  '/extensions/org.libregraph/tags':
    get:
      tags:
        - tags
      summary: Get all known tags
      operationId: GetTags
      responses:
        '200':
          description: Retrieved tags
          content:
            application/json:
              schema:
                title: Collection of tags
                type: object
                properties:
                  value:
                    type: array
                    items:
                      type: string
        default:
          $ref: '#/components/responses/error'
    put:
      tags:
        - tags
      summary: Assign tags to a resource
      operationId: AssignTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tagAssignment'
            examples:
              assign:
                $ref: '#/components/examples/tags_put'
      responses:
        '200':
          description: No content
        default:
          $ref: '#/components/responses/error'
    delete:
      tags:
        - tags
      summary: Unassign tags from a resource
      operationId: UnassignTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tagUnassignment'
            examples:
              unassign:
                $ref: '#/components/examples/tags_delete'
      responses:
        '200':
          description: No content
        default:
          $ref: '#/components/responses/error'
  /applications:
    get:
      tags:
        - applications
      summary: Get all applications
      operationId: ListApplications
      responses:
        '200':
          description: Retrieved entities
          content:
            application/json:
              schema:
                title: Collection of applications
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/application'
        default:
          $ref: '#/components/responses/error'
  /applications/{application-id}:
    get:
      tags:
        - applications
      summary: Get application by id
      operationId: GetApplication
      parameters:
        - name: application-id
          in: path
          description: 'key: id of application'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        default:
          $ref: '#/components/responses/error'
components:
  schemas:
    entity:
      description: Represents an entity.
      readOnly: true
      type: object
      properties:
        id:
          type: string
          description: The unique idenfier for an entity. Read-only.
          readOnly: true
    tagAssignment:
      type: object
      required:
        - resourceId
        - tags
      properties:
        resourceId:
          type: string
        tags:
          type: array
          items:
            type: string
    tagUnassignment:
      type: object
      required:
        - resourceId
        - tags
      properties:
        resourceId:
          type: string
        tags:
          type: array
          items:
            type: string
    educationOrganization:
      description: Abstract. Represents an organization in educational context
      properties:
        id:
          type: string
          description: The unique idenfier for an entity. Read-only.
          readOnly: true
        displayName:
          type: string
          description: The organization name
    educationSchool:
      description: Represents a school
      type: object
      properties:
        id:
          type: string
          description: The unique idenfier for an entity. Read-only.
          readOnly: true
        displayName:
          type: string
          description: The organization name
        schoolNumber:
          type: string
          description: School number
    educationClass:
      description: And extension of group representing a class or course
      type: object
      required:
        - displayName
        - classification
      properties:
        # entity
        id:
          type: string
          description: Read-only.
          readOnly: true
        # group
        description:
          type: string
          description: 'An optional description for the group. Returned by default.'
        displayName:
          type: string
          description: 'The display name for the group. This property is required when a group is created and cannot be cleared during updates. Returned by default. Supports $search and $orderBy.'
        members:
          type: array
          items:
            $ref: '#/components/schemas/user'
          description: 'Users and groups that are members of this group. HTTP Methods: GET (supported for all groups), Nullable. Supports $expand.'
        'members@odata.bind':
          type: array
          items:
            type: string
          uniqueItems: true
          minItems: 1
          maxItems: 20
          description: A list of member references to the members to be added. Up to 20 members can be added with a single request
        classification:
          type: string
          enum: [class, course]
          description: 'Classification of the group, i.e. "class" or "course"'
        externalId:
          type: string
          description: An external unique ID for the class
    educationUser:
      description: And extension of user with education specific attributes
      type: object
      properties:
        # entity
        id:
          type: string
          description: Read-only.
          readOnly: true
        # user
        accountEnabled:
          type: boolean
          description: 'Set to "true" when the account is enabled.'
        displayName:
          type: string
          description: 'The name displayed in the address book for the user. This value is usually the combination of the user''s first name, middle initial, and last name. This property is required when a user is created and it cannot be cleared during updates. Returned by default. Supports $orderby.'
        drives:
          type: array
          items:
            $ref: '#/components/schemas/drive'
          description: A collection of drives available for this user. Read-only.
          maxItems: 100
          readOnly: true
        drive:
          $ref: '#/components/schemas/drive'
          description: The personal drive of this user. Read-only.
          readOnly: true
        identities:
          description: Identities associated with this account.
          type: array
          items:
            $ref: '#/components/schemas/objectIdentity'
        mail:
          type: string
          description: 'The SMTP address for the user, for example, ''jeff@contoso.onowncloud.com''. Returned by default.'
        memberOf:
          type: array
          items:
            $ref: '#/components/schemas/group'
          description: 'Groups that this user is a member of. HTTP Methods: GET (supported for all groups). Read-only. Nullable. Supports $expand.'
        onPremisesSamAccountName:
          type: string
          description: 'Contains the on-premises SAM account name synchronized from the on-premises directory. Read-only.'
        passwordProfile:
          $ref: '#/components/schemas/passwordProfile'
        surname:
          type: string
          description: The user's surname (family name or last name). Returned by default.
        givenName:
          type: string
          description: The user's givenName. Returned by default.
        primaryRole:
          type: string
          description: 'The user`s default role. Such as "student" or "teacher"'
        userType:
          type: string
          description: 'The user`s type. This can be either "Member" for regular user, or "Guest" for guest users.'
    drive:
      description: The drive represents a space on the storage.
      type: object
      required:
        - name
      properties:
        # entity
        id:
          type: string
          description: The unique idenfier for this drive.
          readOnly: true
        # base item
        createdBy:
          $ref: '#/components/schemas/identitySet'
          description: 'Identity of the user, device, or application which created the item. Read-only.'
          readOnly: true
        createdDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time of item creation. Read-only.
          format: date-time
          readOnly: true
        description:
          type: string
          description: Provides a user-visible description of the item. Optional.
        eTag:
          type: string
          description: ETag for the item. Read-only.
          readOnly: true
        lastModifiedBy:
          $ref: '#/components/schemas/identitySet'
          description: 'Identity of the user, device, and application which last modified the item. Read-only.'
          readOnly: true
        lastModifiedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time the item was last modified. Read-only.
          format: date-time
          readOnly: true
        name:
          type: string
          description: The name of the item. Read-write.
        parentReference:
          $ref: '#/components/schemas/itemReference'
          description: 'Parent information, if the item has a parent. Read-write.'
        webUrl:
          type: string
          description: URL that displays the resource in the browser. Read-only.
          readOnly: true
        # drive
        driveType:
          type: string
          description: Describes the type of drive represented by this resource. Values are "personal" for users home spaces, "project", "virtual" or "share". Read-only.
          readOnly: true
        driveAlias:
          type: string
          description: "The drive alias can be used in clients to make the urls user friendly. Example: 'personal/einstein'. This will be used to resolve to the correct driveID."
        owner:
          $ref: '#/components/schemas/identitySet'
        quota:
          $ref: '#/components/schemas/quota'
        items:
          type: array
          items:
            $ref: '#/components/schemas/driveItem'
          description: All items contained in the drive. Read-only. Nullable.
          readOnly: true
        root:
          $ref: '#/components/schemas/driveItem'
          description: Drive item describing the drive's root. Read-only.
        special:
          type: array
          items:
              $ref: '#/components/schemas/driveItem'
          description: A collection of special drive resources.
    identitySet:
      type: object
      description: Optional. User account.
      properties:
        application:
          $ref: '#/components/schemas/identity'
          description: Optional. The application associated with this action.
        device:
          $ref: '#/components/schemas/identity'
          description: Optional. The device associated with this action.
        user:
          $ref: '#/components/schemas/identity'
          description: Optional. The user associated with this action.
        group:
          $ref: '#/components/schemas/identity'
          description: Optional. The group associated with this action.
    identity:
      type: object
      required:
        - displayName
      properties:
        displayName:
          type: string
          description: 'The identity''s display name. Note that this may not always be available or up to date. For example, if a user changes their display name, the API may show the new value in a future response, but the items associated with the user won''t show up as having changed when using delta.'
        id:
          type: string
          description: Unique identifier for the identity.
    objectIdentity:
      description: Represents an identity used to sign in to a user account
      type: object
      properties:
        issuer:
          description: domain of the Provider issuing the identity
          type: string
        issuerAssignedId:
          description: The unique id assigned by the issuer to the account
          type: string
    passwordProfile:
      description: Password Profile associated with a user
      type: object
      properties:
        forceChangePasswordNextSignIn:
          type: boolean
          description: If true the user is required to change their password upon the next login
          default: false
        password:
          type: string
          writeOnly: true
          description: The user's password
    user:
      description: Represents an Active Directory user object.
      type: object
      properties:
        # entity
        id:
          type: string
          description: Read-only.
          readOnly: true
        accountEnabled:
          type: boolean
          description: 'Set to "true" when the account is enabled.'
        appRoleAssignments:
          type: array
          items:
            $ref: '#/components/schemas/appRoleAssignment'
          description: The apps and app roles which this user has been assigned.
          readOnly: true
        displayName:
          type: string
          description: 'The name displayed in the address book for the user. This value is usually the combination of the user''s first name, middle initial, and last name. This property is required when a user is created and it cannot be cleared during updates. Returned by default. Supports $orderby.'
        drives:
          type: array
          items:
            $ref: '#/components/schemas/drive'
          description: A collection of drives available for this user. Read-only.
          maxItems: 100
          readOnly: true
        drive:
          $ref: '#/components/schemas/drive'
          description: The personal drive of this user. Read-only.
          readOnly: true
        identities:
          description: Identities associated with this account.
          type: array
          items:
            $ref: '#/components/schemas/objectIdentity'
        mail:
          type: string
          description: 'The SMTP address for the user, for example, ''jeff@contoso.onowncloud.com''. Returned by default.'
        memberOf:
          type: array
          items:
            $ref: '#/components/schemas/group'
          description: 'Groups that this user is a member of. HTTP Methods: GET (supported for all groups). Read-only. Nullable. Supports $expand.'
        onPremisesSamAccountName:
          type: string
          description: 'Contains the on-premises SAM account name synchronized from the on-premises directory. Read-only.'
        passwordProfile:
          $ref: '#/components/schemas/passwordProfile'
        surname:
          type: string
          description: The user's surname (family name or last name). Returned by default.
        givenName:
          type: string
          description: The user's givenName. Returned by default.
        userType:
          type: string
          description: 'The user`s type. This can be either "Member" for regular user, or "Guest" for guest users.'
    itemReference:
      type: object
      properties:
        driveId:
          type: string
          description: Unique identifier of the drive instance that contains the item. Read-only.
          readOnly: true
        driveType:
          type: string
          description: 'Identifies the type of drive. See [drive][] resource for values. Read-only.'
          readOnly: true
        id:
          type: string
          description: Unique identifier of the item in the drive. Read-only.
          readOnly: true
        name:
          type: string
          description: The name of the item being referenced. Read-only.
          readOnly: true
        path:
          type: string
          description: Path that can be used to navigate to the item. Read-only.
          readOnly: true
        shareId:
          type: string
          description: 'A unique identifier for a shared resource that can be accessed via the [Shares][] API.'
    driveItem:
      description: Reprensents a resource inside a drive. Read-only.
      readOnly: true
      type: object
      properties:
        # entity
        id:
          type: string
          description: Read-only.
          readOnly: true
        # base item
        createdBy:
          $ref: '#/components/schemas/identitySet'
          description: 'Identity of the user, device, or application which created the item. Read-only.'
          readOnly: true
        createdDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time of item creation. Read-only.
          format: date-time
          readOnly: true
        description:
          type: string
          description: Provides a user-visible description of the item. Optional.
        eTag:
          type: string
          description: ETag for the item. Read-only.
          readOnly: true
        lastModifiedBy:
          $ref: '#/components/schemas/identitySet'
          description: 'Identity of the user, device, and application which last modified the item. Read-only.'
          readOnly: true
        lastModifiedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time the item was last modified. Read-only.
          format: date-time
          readOnly: true
        name:
          type: string
          description: The name of the item. Read-write.
        parentReference:
          $ref: '#/components/schemas/itemReference'
          description: 'Parent information, if the item has a parent. Read-write.'
        webUrl:
          type: string
          description: URL that displays the resource in the browser. Read-only.
          readOnly: true
        # driveItem
        content:
          type: string
          description: 'The content stream, if the item represents a file.'
          format: base64url
        cTag:
          type: string
          description: An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.
          readOnly: true
        deleted:
          $ref: '#/components/schemas/deleted'
        file:
          $ref: '#/components/schemas/openGraphFile'
        fileSystemInfo:
          $ref: '#/components/schemas/fileSystemInfo'
        folder:
          $ref: '#/components/schemas/folder'
        image:
          $ref: '#/components/schemas/image'
        root:
          $ref: '#/components/schemas/root'
        trash:
          $ref: '#/components/schemas/trash'
        specialFolder:
          $ref: '#/components/schemas/specialFolder'
        remoteItem:
            $ref: '#/components/schemas/remoteItem'
        size:
          type: integer
          description: Size of the item in bytes. Read-only.
          format: int64
          readOnly: true
        webDavUrl:
          type: string
          description: WebDAV compatible URL for the item. Read-only.
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/driveItem'
          description: Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
          readOnly: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/permission'
          description: The set of permissions for the item. Read-only. Nullable.
          readOnly: true
    deleted:
      type: object
      description: Information about the deleted state of the item. Read-only.
      readOnly: true
      properties:
        state:
          type: string
          description: Represents the state of the deleted item.
    openGraphFile:
      type: object
      description: 'File metadata, if the item is a file. Read-only.'
      readOnly: true
      properties:
        hashes:
          $ref: '#/components/schemas/hashes'
        mimeType:
          type: string
          description: The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file was uploaded. Read-only.
          readOnly: true
        processingMetadata:
          type: boolean
    fileSystemInfo:
      type: object
      description: File system information on client. Read-write.
      properties:
        createdDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The UTC date and time the file was created on a client.
          format: date-time
        lastAccessedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The UTC date and time the file was last accessed. Available for the recent file list only.
          format: date-time
        lastModifiedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The UTC date and time the file was last modified on a client.
          format: date-time
    folder:
      type: object
      description: 'Folder metadata, if the item is a folder. Read-only.'
      readOnly: true
      properties:
        childCount:
          maximum: 2147483647
          type: integer
          description: Number of children contained immediately within this container.
          format: int32
        view:
          $ref: '#/components/schemas/folderView'
    image:
      type: object
      description: 'Image metadata, if the item is an image. Read-only.'
      readOnly: true
      properties:
        height:
          maximum: 2147483647
          type: integer
          description: 'Optional. Height of the image, in pixels. Read-only.'
          format: int32
          readOnly: true
        width:
          maximum: 2147483647
          type: integer
          description: 'Optional. Width of the image, in pixels. Read-only.'
          format: int32
          readOnly: true
    root:
      type: object
      description: 'If this property is non-null, it indicates that the driveItem is the top-most driveItem in the drive.'
    trash:
      type: object
      description: 'Metadata for trashed drive Items'
      readOnly: true
      properties:
        trashedBy:
          $ref: '#/components/schemas/identitySet'
          description: 'Identity of the user, device, or application which trashed the item. Read-only.'
          readOnly: true
        trashedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The UTC date and time the folder was marked as trashed.
          format: date-time
    specialFolder:
      type: object
      description: 'If the current item is also available as a special folder, this facet is returned. Read-only'
      readOnly: true
      properties:
        name:
          type: string
          description: The unique identifier for this item in the /drive/special collection
    remoteItem:
      title: remoteItem
      description: 'Remote item data, if the item is shared from a drive other than the one being accessed. Read-only.'
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/identitySet'
        createdDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time of item creation. Read-only.
          format: date-time
        file:
          $ref: '#/components/schemas/openGraphFile'
        fileSystemInfo:
          $ref: '#/components/schemas/fileSystemInfo'
        folder:
           $ref: '#/components/schemas/folder'
        id:
          type: string
          description: Unique identifier for the remote item in its drive. Read-only.
        image:
          $ref: '#/components/schemas/image'
        lastModifiedBy:
          $ref: '#/components/schemas/identitySet'
        lastModifiedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time the item was last modified. Read-only.
          format: date-time
        name:
          type: string
          description: Optional. Filename of the remote item. Read-only.
        eTag:
          type: string
          description: ETag for the item. Read-only.
          readOnly: true
        cTag:
          type: string
          description: An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.
          readOnly: true
        parentReference:
          $ref: '#/components/schemas/itemReference'
        shared:
          $ref: '#/components/schemas/shared'
        size:
          type: integer
          description: Size of the remote item. Read-only.
          format: int64
        specialFolder:
          $ref: '#/components/schemas/specialFolder'
        webDavUrl:
          type: string
          description: DAV compatible URL for the item.
        webUrl:
          type: string
          description: URL that displays the resource in the browser. Read-only.
          title: shared
    shared:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/identitySet'
        scope:
          type: string
          description: 'Indicates the scope of how the item is shared: anonymous, organization, or users. Read-only.'
        sharedBy:
          $ref: '#/components/schemas/identitySet'
        sharedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The UTC date and time when the item was shared. Read-only.
          format: date-time
    quota:
      type: object
      description: Optional. Information about the drive's storage space quota. Read-only.
      readOnly: true
      properties:
        deleted:
          type: integer
          description: 'Total space consumed by files in the recycle bin, in bytes. Read-only.'
          format: int64
          readOnly: true
        remaining:
          type: integer
          description: 'Total space remaining before reaching the quota limit, in bytes. Read-only.'
          format: int64
          readOnly: true
        state:
          type: string
          description: Enumeration value that indicates the state of the storage space. Either "normal", "nearing", "critical" or "exceeded". Read-only.
          readOnly: true
        total:
          type: integer
          description: 'Total allowed storage space, in bytes. Read-only.'
          format: int64
          readOnly: true
        used:
          type: integer
          description: 'Total space used, in bytes. Read-only.'
          format: int64
          readOnly: true
    hashes:
      type: object
      description: 'Hashes of the file''s binary content, if available. Read-only.'
      readOnly: true
      properties:
        crc32Hash:
          type: string
          description: The CRC32 value of the file (if available). Read-only.
          maxLength: 8
        quickXorHash:
          type: string
          description: A proprietary hash of the file that can be used to determine if the contents of the file have changed (if available). Read-only.
        sha1Hash:
          type: string
          description: SHA1 hash for the contents of the file (if available). Read-only.
          maxLength: 40
        sha256Hash:
          type: string
          description: SHA256 hash for the contents of the file (if available). Read-only.
          maxLength: 160
    folderView:
      type: object
      description: A collection of properties defining the recommended view for the folder.
      properties:
        sortBy:
          type: string
          description: The method by which the folder should be sorted.
        sortOrder:
          type: string
          description: 'If true, indicates that items should be sorted in descending order. Otherwise, items should be sorted ascending.'
        viewType:
          type: string
          description: The type of view that should be used to represent the folder.
    group:
      type: object
      title: group
      properties:
        # entity
        id:
          type: string
          description: Read-only.
          readOnly: true
        description:
          type: string
          description: 'An optional description for the group. Returned by default.'
        displayName:
          type: string
          description: 'The display name for the group. This property is required when a group is created and cannot be cleared during updates. Returned by default. Supports $search and $orderBy.'
        members:
          type: array
          items:
            $ref: '#/components/schemas/user'
          description: 'Users and groups that are members of this group. HTTP Methods: GET (supported for all groups), Nullable. Supports $expand.'
        'members@odata.bind':
          type: array
          items:
            type: string
          uniqueItems: true
          minItems: 1
          maxItems: 20
          description: A list of member references to the members to be added. Up to 20 members can be added with a single request
    directoryObject:
      type: object
      properties:
        # entity
        id:
          type: string
          description: The unique identifier for the object. 12345678-9abc-def0-1234-56789abcde. The value of the ID property is often, but not exclusively, in the form of a GUID. The value should be treated as an opaque identifier and not based in being a GUID. Null values are not allowed. Read-only.
          readOnly: true
        # directory object
        deletedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
      description: 'Represents a Directory object. Read-only.'
    permission:
      type: object
      description: 'The Permission resource provides information about a sharing permission granted for a DriveItem resource.'
      readOnly: true
      properties:
        expirationDateTime:
          type: string
          description: An optional expiration date which limits the permission in time.
          format: date-time
        grantedToIdentities:
          type: array
          items:
            $ref: '#/components/schemas/identitySet'
        roles:
          type: array
          items:
            type: string
    odata.error:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/odata.error.main'
    odata.error.main:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/odata.error.detail'
        innererror:
          type: object
          description: The structure of this object is service-specific
    odata.error.detail:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
    appRole:
      title: appRole
      required:
        - id
      type: object
      properties:
        allowedMemberTypes:
          type: array
          items:
            type: string
          description: 'Specifies whether this app role can be assigned to users and groups (by setting to [''User'']), to other application''s (by setting to [''Application''], or both (by setting to [''User'', ''Application'']). App roles supporting assignment to other applications'' service principals are also known as application permissions. The ''Application'' value is only supported for app roles defined on application entities.'
        description:
          type: string
          description: 'The description for the app role. This is displayed when the app role is being assigned and, if the app role functions as an application permission, during  consent experiences.'
          nullable: true
        displayName:
          type: string
          description: Display name for the permission that appears in the app role assignment and consent experiences.
          nullable: true
        id:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          description: 'Unique role identifier inside the appRoles collection. When creating a new app role, a new GUID identifier must be provided.'
          format: uuid
    appRoleAssignment:
        type: object
        required:
          - appRoleId
          - principalId
          - resourceId
        properties:
          # entity
          id:
            type: string
            description: The unique identifier for the object. 12345678-9abc-def0-1234-56789abcde. The value of the ID property is often, but not exclusively, in the form of a GUID. The value should be treated as an opaque identifier and not based in being a GUID. Null values are not allowed. Read-only.
            readOnly: true
          # directory object
          deletedDateTime:
            pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
            type: string
            format: date-time
          appRoleId:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            description: 'The identifier (id) for the app role which is assigned to the user. Required on create.'
            format: uuid
          createdDateTime:
            pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
            type: string
            description: 'The time when the app role assignment was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.'
            format: date-time
            nullable: true
          principalDisplayName:
            type: string
            description: 'The display name of the user, group, or service principal that was granted the app role assignment. Read-only.'
            nullable: true
          principalId:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            description: 'The unique identifier (id) for the user, security group, or service principal being granted the app role. Security groups with dynamic memberships are supported. Required on create.'
            format: uuid
            nullable: true
          principalType:
            type: string
            description: 'The type of the assigned principal. This can either be User, Group, or ServicePrincipal. Read-only.'
            nullable: true
          resourceDisplayName:
            type: string
            description: The display name of the resource app's service principal to which the assignment is made.
            nullable: true
          resourceId:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            description: The unique identifier (id) for the resource service principal for which the assignment is made. Required on create.
            format: uuid
            nullable: true
    application:
      type: object
      required:
        - id
      properties:
          # entity
          id:
            type: string
            description: The unique identifier for the object. 12345678-9abc-def0-1234-56789abcde. The value of the ID property is often, but not exclusively, in the form of a GUID. The value should be treated as an opaque identifier and not based in being a GUID. Null values are not allowed. Read-only.
            readOnly: true
          # properties
          appRoles:
            type: array
            description: 'The collection of roles defined for the application. With app role assignments, these roles can be assigned to users, groups, or service principals associated with other applications. Not nullable.'
            items:
              $ref: '#/components/schemas/appRole'
            nullable: false
          displayName:
              type: string
              description: 'The display name for the application.'
              nullable: true
  responses:
      error:
        description: error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/odata.error'
  parameters:
    top:
      name: $top
      in: query
      description: Show only the first n items
      schema:
        minimum: 0
        type: integer
      example: 50
    skip:
      name: $skip
      in: query
      description: Skip the first n items
      schema:
        minimum: 0
        type: integer
    search:
      name: $search
      in: query
      description: Search items by search phrases
      schema:
        type: string
    drivesFilter:
      name: $filter
      in: query
      description: Filter items by property values
      schema:
        type: string
      examples:
        filter by type:
          value: driveType eq 'project'
        filter by id:
          value: id eq 'uuid'
    usersFilter:
      name: $filter
      in: query
      description: Filter users by property values and relationship attributes
      schema:
        type: string
      examples:
        list all user of a group:
          value: memberOf/any(x:x/id eq 910367f9-4041-4db1-961b-d1e98f708eaf)
        list all users that are a member of both groups:
          value: memberOf/any(x:x/id eq 910367f9-4041-4db1-961b-d1e98f708eaf) and memberOf/any(x:x/id eq 4cceeace-b8ca-472a-9788-e73da11de14c)
        list all users that are a member of either one or both groups:
          value: memberOf/any(x:x/id eq 910367f9-4041-4db1-961b-d1e98f708eaf) or memberOf/any(x:x/id eq 4cceeace-b8ca-472a-9788-e73da11de14c)
        list all users with a specific role assignd:
          value: appRoleAssignments/any(x:x/appRoleId eq 910367f9-4041-4db1-961b-d1e98f708eaf)
        list all users that are a member of the group and have a specific role assigned:
          value: appRoleAssignments/any(x:x/appRoleId eq 910367f9-4041-4db1-961b-d1e98f708eaf) and memberOf/any(x:x/id eq 4cceeace-b8ca-472a-9788-e73da11de14c)
        list all users that are a member of any of groups and have a specific role assigned:
          value: (memberOf/any(x:x/id eq 910367f9-4041-4db1-961b-d1e98f708eaf) or memberOf/any(x:x/id eq 4cceeace-b8ca-472a-9788-e73da11de14c)) and appRoleAssignments/any(x:x/appRoleId eq 910367f9-4041-4db1-961b-d1e98f708eaf)
    count:
      name: $count
      in: query
      description: Include count of items
      schema:
        type: boolean
    orderby:
      name: $orderby
      in: query
      description: The $orderby system query option allows clients to request resources in either ascending order using asc or descending order using desc.
      schema:
        type: string
      examples:
        last modified descending:
          value: lastModifiedDateTime desc
        last modified ascending:
          value: lastModifiedDateTime asc
        name descending:
          value: name desc
        name ascending:
          value: name asc
  securitySchemes:
      openId:
        type: openIdConnect
        openIdConnectUrl: https://ocis.ocis-traefik.latest.owncloud.works/.well-known/openid-configuration
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: plain
  examples:
    tags_put:
      value:
        resourceId: 7f92b0a9-06ad-49dc-890f-0e0a6eb4dea6$e9f01ca3-577f-4d1d-acd4-1cc44149ac25!5fb9f87c-a317-467b-9882-eb9f171564ac
        tags:
          - tag_to_assign_1
          - tag_to_assign_2
    tags_delete:
      value:
        resourceId: 7f92b0a9-06ad-49dc-890f-0e0a6eb4dea6$e9f01ca3-577f-4d1d-acd4-1cc44149ac25!5fb9f87c-a317-467b-9882-eb9f171564ac
        tags:
          - tag_to_unassign_1
          - tag_to_unassign_2
    educationUser:
      value:
        id: 90eedea1-dea1-90ee-a1de-ee90a1deee90
        onPremisesSAMAccountName: max.mustermann
        displayName: Max Mustermann
        surname: Mustermann
        givenName: Max
        mail: max.musterman@example.org
        primaryRole: student
        identities:
          - issuer: idp.school.com
            issuerAssignedId: max.mustermann
    educationUser_post:
      value:
        onPremisesSAMAccountName: max.mustermann
        displayName: Max Mustermann
        surname: Mustermann
        givenName: Max
        mail: max.musterman@example.org
        primaryRole: student
        identities:
          - issuer: idp.school.com
            issuerAssignedId: max.mustermann
    educationSchool:
      value:
        id: 43b879c4-14c6-4e0a-9b3f-b1b33c5a4bd4
        displayName: Realschule Musterstadt
        schoolNumber: '1234'
    educationSchool_post:
      value:
        displayName: Realschule Musterstadt
        schoolNumber: '1234'
    educationClass:
      value:
        id: 86948e45-96a6-43df-b83d-46e92afd30de
        displayName: Mathematik
        classification: course
        externalId: ac528aea-978e-415c-a733-c4ba235d3388
    educationClass_post:
      value:
        displayName: Mathematik
        classification: course
        externalId: ac528aea-978e-415c-a733-c4ba235d3388
security:
  - openId: []
